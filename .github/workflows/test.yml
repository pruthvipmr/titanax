name: Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv sync --all-extras --dev
    
    - name: Run unit tests
      run: uv run python -m pytest tests/unit/ -v
    
    - name: Run integration tests
      run: |
        # Skip multi-device tests on CI (requires multiple GPUs/TPUs)
        uv run python -m pytest tests/integration/ -v -m "not requires_multi_device"
      env:
        # Force JAX to use CPU platform for single-device tests
        JAX_PLATFORM_NAME: cpu
    
    - name: Run type checking
      run: uv run mypy src/titanax/
    
    - name: Run linting
      run: |
        uv run ruff check src/ tests/ examples/
        uv run black --check src/ tests/ examples/

  benchmark:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python 3.10
      run: uv python install 3.10
    
    - name: Install dependencies
      run: uv sync --all-extras --dev
    
    - name: Check if benchmarks exist
      run: |
        if [ -z "$(find tests/benchmarks -name '*.py' -not -name '__init__.py' 2>/dev/null)" ]; then
          echo "No benchmark files found, skipping benchmark tests"
          exit 0
        fi
    
    - name: Run benchmarks
      run: |
        # Only run if benchmark files exist
        if [ -n "$(find tests/benchmarks -name '*.py' -not -name '__init__.py' 2>/dev/null)" ]; then
          uv run python -m pytest tests/benchmarks/ -v
        else
          echo "No benchmark tests to run"
        fi
